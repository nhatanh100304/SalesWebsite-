{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport users from \"@/data/users\";\nexport default {\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      error: \"\",\n      users: users\n    };\n  },\n  methods: {\n    register() {\n      // Kiểm tra mật khẩu phải trùng khớp\n      if (this.password !== this.confirmPassword) {\n        this.error = \"Mật khẩu không trùng khớp\";\n        return;\n      }\n\n      // Lấy danh sách người dùng từ localStorage\n      let storedUsers = JSON.parse(localStorage.getItem(\"users\")) || [];\n\n      // Kiểm tra xem tên đăng nhập đã tồn tại trong localStorage chưa\n      const existingUser = storedUsers.find(user => user.username === this.username);\n      if (existingUser) {\n        this.error = \"Tên đăng nhập đã tồn tại\";\n        return;\n      }\n\n      // Tạo người dùng mới và thêm vào danh sách\n      const newUser = {\n        id: storedUsers.length + 1,\n        username: this.username,\n        password: this.password\n      };\n      storedUsers.push(newUser);\n\n      // Lưu danh sách người dùng mới vào localStorage\n      localStorage.setItem(\"users\", JSON.stringify(storedUsers));\n\n      // Thông báo đăng ký thành công và reset form\n      alert(\"Đăng ký thành công\");\n      this.username = \"\";\n      this.password = \"\";\n      this.confirmPassword = \"\";\n      this.error = \"\";\n\n      // Chuyển hướng sang trang đăng nhập\n      this.$router.push(\"/LoginPage\");\n    }\n  }\n};","map":{"version":3,"names":["users","data","username","password","confirmPassword","error","methods","register","storedUsers","JSON","parse","localStorage","getItem","existingUser","find","user","newUser","id","length","push","setItem","stringify","alert","$router"],"sources":["D:\\Thứ 4\\food\\src\\components\\RegisterPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"container-register\">\r\n    <h2 class=\"title\">Đăng Ký Tài Khoản</h2>\r\n    <div class=\"form-group\">\r\n      <label for=\"username\">Tên đăng nhập</label>\r\n      <input v-model=\"username\" id=\"username\" type=\"text\" placeholder=\"Nhập tên đăng nhập\" />\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Mật khẩu</label>\r\n      <input v-model=\"password\" id=\"password\" type=\"password\" placeholder=\"Nhập mật khẩu\" />\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"confirmPassword\">Xác nhận mật khẩu</label>\r\n      <input v-model=\"confirmPassword\" id=\"confirmPassword\" type=\"password\" placeholder=\"Xác nhận mật khẩu\" />\r\n    </div>\r\n\r\n    <button @click=\"register\" class=\"btn-register\">Đăng Ký</button>\r\n\r\n    <p v-if=\"error\" class=\"error-message\">{{ error }}</p>\r\n\r\n    <div class=\"login-link\">\r\n      <p>Đã có tài khoản? <router-link to=\"/LoginPage\">Đăng nhập</router-link></p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport users from \"@/data/users\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      error: \"\",\r\n      users: users,\r\n    };\r\n  },\r\n  methods: {\r\n    register() {\r\n      // Kiểm tra mật khẩu phải trùng khớp\r\n      if (this.password !== this.confirmPassword) {\r\n        this.error = \"Mật khẩu không trùng khớp\";\r\n        return;\r\n      }\r\n\r\n      // Lấy danh sách người dùng từ localStorage\r\n      let storedUsers = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n\r\n      // Kiểm tra xem tên đăng nhập đã tồn tại trong localStorage chưa\r\n      const existingUser = storedUsers.find((user) => user.username === this.username);\r\n      if (existingUser) {\r\n        this.error = \"Tên đăng nhập đã tồn tại\";\r\n        return;\r\n      }\r\n\r\n      // Tạo người dùng mới và thêm vào danh sách\r\n      const newUser = { id: storedUsers.length + 1, username: this.username, password: this.password };\r\n      storedUsers.push(newUser);\r\n\r\n      // Lưu danh sách người dùng mới vào localStorage\r\n      localStorage.setItem(\"users\", JSON.stringify(storedUsers));\r\n\r\n      // Thông báo đăng ký thành công và reset form\r\n      alert(\"Đăng ký thành công\");\r\n      this.username = \"\";\r\n      this.password = \"\";\r\n      this.confirmPassword = \"\";\r\n      this.error = \"\";\r\n\r\n      // Chuyển hướng sang trang đăng nhập\r\n      this.$router.push(\"/LoginPage\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container-register {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 400px;\r\n  padding: 40px;\r\n  background-color: #ffffff;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  margin: auto;\r\n  text-align: center;\r\n}\r\n\r\n.title {\r\n  font-size: 28px;\r\n  font-weight: 600;\r\n  color: #333;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.form-group {\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n  text-align: left;\r\n}\r\n\r\nlabel {\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: #333;\r\n  margin-bottom: 8px;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 12px;\r\n  font-size: 16px;\r\n  border-radius: 8px;\r\n  border: 1px solid #ccc;\r\n  box-sizing: border-box;\r\n  outline: none;\r\n  transition: border 0.3s ease;\r\n}\r\n\r\ninput:focus {\r\n  border-color: #fcb034;\r\n}\r\n\r\n.btn-register {\r\n  width: 100%;\r\n  padding: 12px;\r\n  background-color: #fcb034;\r\n  color: white;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease, transform 0.3s ease;\r\n}\r\n\r\n.btn-register:hover {\r\n  background-color: #ffa726;\r\n  transform: scale(1.05);\r\n}\r\n\r\n.error-message {\r\n  color: red;\r\n  font-size: 14px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.login-link {\r\n  margin-top: 20px;\r\n}\r\n\r\n.login-link p {\r\n  font-size: 14px;\r\n  color: #666;\r\n}\r\n\r\n.login-link router-link {\r\n  font-weight: 600;\r\n  color: #fcb034;\r\n  text-decoration: none;\r\n}\r\n\r\n.login-link router-link:hover {\r\n  text-decoration: underline;\r\n}\r\n</style>\r\n"],"mappings":";AA6BA,OAAOA,KAAI,MAAO,cAAc;AAEhC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MACnBC,KAAK,EAAE,EAAE;MACTL,KAAK,EAAEA;IACT,CAAC;EACH,CAAC;EACDM,OAAO,EAAE;IACPC,QAAQA,CAAA,EAAG;MACT;MACA,IAAI,IAAI,CAACJ,QAAO,KAAM,IAAI,CAACC,eAAe,EAAE;QAC1C,IAAI,CAACC,KAAI,GAAI,2BAA2B;QACxC;MACF;;MAEA;MACA,IAAIG,WAAU,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE;;MAEjE;MACA,MAAMC,YAAW,GAAIL,WAAW,CAACM,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACb,QAAO,KAAM,IAAI,CAACA,QAAQ,CAAC;MAChF,IAAIW,YAAY,EAAE;QAChB,IAAI,CAACR,KAAI,GAAI,0BAA0B;QACvC;MACF;;MAEA;MACA,MAAMW,OAAM,GAAI;QAAEC,EAAE,EAAET,WAAW,CAACU,MAAK,GAAI,CAAC;QAAEhB,QAAQ,EAAE,IAAI,CAACA,QAAQ;QAAEC,QAAQ,EAAE,IAAI,CAACA;MAAS,CAAC;MAChGK,WAAW,CAACW,IAAI,CAACH,OAAO,CAAC;;MAEzB;MACAL,YAAY,CAACS,OAAO,CAAC,OAAO,EAAEX,IAAI,CAACY,SAAS,CAACb,WAAW,CAAC,CAAC;;MAE1D;MACAc,KAAK,CAAC,oBAAoB,CAAC;MAC3B,IAAI,CAACpB,QAAO,GAAI,EAAE;MAClB,IAAI,CAACC,QAAO,GAAI,EAAE;MAClB,IAAI,CAACC,eAAc,GAAI,EAAE;MACzB,IAAI,CAACC,KAAI,GAAI,EAAE;;MAEf;MACA,IAAI,CAACkB,OAAO,CAACJ,IAAI,CAAC,YAAY,CAAC;IACjC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}