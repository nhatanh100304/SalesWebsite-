{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport users from '@/data/users';\nexport default {\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      error: \"\",\n      success: \"\",\n      users: users // Giữ dữ liệu mẫu cho users hoặc dữ liệu mặc định\n    };\n  },\n  methods: {\n    register() {\n      // Kiểm tra mật khẩu phải trùng khớp\n      if (this.password !== this.confirmPassword) {\n        this.error = \"Mật khẩu không trùng khớp\";\n        return;\n      }\n\n      // Lấy danh sách người dùng từ localStorage\n      let storedUsers = JSON.parse(localStorage.getItem('users')) || [];\n\n      // Kiểm tra xem tên đăng nhập đã tồn tại trong localStorage chưa\n      const existingUser = storedUsers.find(user => user.username === this.username);\n      if (existingUser) {\n        this.error = \"Tên đăng nhập đã tồn tại\";\n        return;\n      }\n\n      // Tạo người dùng mới và thêm vào danh sách\n      const newUser = {\n        id: storedUsers.length + 1,\n        username: this.username,\n        password: this.password\n      };\n      storedUsers.push(newUser);\n\n      // Lưu danh sách người dùng mới vào localStorage\n      localStorage.setItem('users', JSON.stringify(storedUsers));\n\n      // Thông báo đăng ký thành công và reset form\n      alert(\"Đăng ký thành công\");\n      this.username = '';\n      this.password = '';\n      this.confirmPassword = '';\n      this.error = '';\n\n      // Chuyển hướng sang trang đăng nhập\n      this.$router.push('/LoginPage');\n    }\n  }\n};","map":{"version":3,"names":["users","data","username","password","confirmPassword","error","success","methods","register","storedUsers","JSON","parse","localStorage","getItem","existingUser","find","user","newUser","id","length","push","setItem","stringify","alert","$router"],"sources":["D:\\Thứ 4\\food\\src\\components\\RegisterPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Đăng ký tài khoản</h2>\r\n    <input v-model=\"username\" placeholder=\"Tên đăng nhập\" />\r\n    <input v-model=\"password\"  type=\"password\" placeholder=\"Mật khẩu\" />\r\n    <input\r\n      v-model=\"confirmPassword\" \r\n      type=\"password\"\r\n      placeholder=\"Xác nhận mật khẩu\"\r\n    />\r\n    <button @click=\"register\">Đăng ký</button>\r\n    <p  v-if=\"error\" class=\"error\">{{error}}</p>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport users from '@/data/users';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      error: \"\",\r\n      success: \"\",\r\n      users: users, // Giữ dữ liệu mẫu cho users hoặc dữ liệu mặc định\r\n    };\r\n  },\r\n  methods: {\r\n    register() {\r\n      // Kiểm tra mật khẩu phải trùng khớp\r\n      if (this.password !== this.confirmPassword) {\r\n        this.error = \"Mật khẩu không trùng khớp\";\r\n        return;\r\n      }\r\n      \r\n      // Lấy danh sách người dùng từ localStorage\r\n      let storedUsers = JSON.parse(localStorage.getItem('users')) || [];\r\n\r\n      // Kiểm tra xem tên đăng nhập đã tồn tại trong localStorage chưa\r\n      const existingUser = storedUsers.find(user => user.username === this.username);\r\n      if (existingUser) {\r\n        this.error = \"Tên đăng nhập đã tồn tại\";\r\n        return;\r\n      }\r\n\r\n      // Tạo người dùng mới và thêm vào danh sách\r\n      const newUser = { id: storedUsers.length + 1, username: this.username, password: this.password };\r\n      storedUsers.push(newUser);\r\n      \r\n      // Lưu danh sách người dùng mới vào localStorage\r\n      localStorage.setItem('users', JSON.stringify(storedUsers));\r\n      \r\n      // Thông báo đăng ký thành công và reset form\r\n      alert(\"Đăng ký thành công\");\r\n      this.username = '';\r\n      this.password = '';\r\n      this.confirmPassword = '';\r\n      this.error = '';\r\n\r\n      // Chuyển hướng sang trang đăng nhập\r\n      this.$router.push('/LoginPage');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style>\r\n</style>"],"mappings":";AAiBA,OAAOA,KAAI,MAAO,cAAc;AAEhC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MACnBC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXN,KAAK,EAAEA,KAAK,CAAE;IAChB,CAAC;EACH,CAAC;EACDO,OAAO,EAAE;IACPC,QAAQA,CAAA,EAAG;MACT;MACA,IAAI,IAAI,CAACL,QAAO,KAAM,IAAI,CAACC,eAAe,EAAE;QAC1C,IAAI,CAACC,KAAI,GAAI,2BAA2B;QACxC;MACF;;MAEA;MACA,IAAII,WAAU,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE;;MAEjE;MACA,MAAMC,YAAW,GAAIL,WAAW,CAACM,IAAI,CAACC,IAAG,IAAKA,IAAI,CAACd,QAAO,KAAM,IAAI,CAACA,QAAQ,CAAC;MAC9E,IAAIY,YAAY,EAAE;QAChB,IAAI,CAACT,KAAI,GAAI,0BAA0B;QACvC;MACF;;MAEA;MACA,MAAMY,OAAM,GAAI;QAAEC,EAAE,EAAET,WAAW,CAACU,MAAK,GAAI,CAAC;QAAEjB,QAAQ,EAAE,IAAI,CAACA,QAAQ;QAAEC,QAAQ,EAAE,IAAI,CAACA;MAAS,CAAC;MAChGM,WAAW,CAACW,IAAI,CAACH,OAAO,CAAC;;MAEzB;MACAL,YAAY,CAACS,OAAO,CAAC,OAAO,EAAEX,IAAI,CAACY,SAAS,CAACb,WAAW,CAAC,CAAC;;MAE1D;MACAc,KAAK,CAAC,oBAAoB,CAAC;MAC3B,IAAI,CAACrB,QAAO,GAAI,EAAE;MAClB,IAAI,CAACC,QAAO,GAAI,EAAE;MAClB,IAAI,CAACC,eAAc,GAAI,EAAE;MACzB,IAAI,CAACC,KAAI,GAAI,EAAE;;MAEf;MACA,IAAI,CAACmB,OAAO,CAACJ,IAAI,CAAC,YAAY,CAAC;IACjC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}