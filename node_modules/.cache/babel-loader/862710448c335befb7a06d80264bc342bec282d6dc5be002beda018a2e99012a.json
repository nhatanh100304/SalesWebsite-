{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"product-list\"\n};\nconst _hoisted_2 = [\"src\", \"alt\"];\nconst _hoisted_3 = {\n  class: \"product-price\"\n};\nconst _hoisted_4 = [\"onClick\", \"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.itemsWater, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.id,\n      class: \"product-card\"\n    }, [_createElementVNode(\"img\", {\n      src: item.image,\n      alt: item.title\n    }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"h3\", null, _toDisplayString(item.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(item.description), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, _toDisplayString(item.price.toLocaleString()) + \" VNĐ\", 1 /* TEXT */), _createCommentVNode(\" Nút thêm vào giỏ, thay đổi nếu hết hàng \"), _createElementVNode(\"button\", {\n      onClick: $event => $options.addToCart(item),\n      disabled: $options.isOutOfStock(item),\n      class: \"add-to-cart-button\"\n    }, _toDisplayString($options.isOutOfStock(item) ? 'Hết hàng' : 'Thêm vào giỏ'), 9 /* TEXT, PROPS */, _hoisted_4)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createElementVNode","_hoisted_1","_Fragment","_renderList","$data","itemsWater","item","key","id","src","image","alt","title","_hoisted_2","_toDisplayString","description","_hoisted_3","price","toLocaleString","_createCommentVNode","onClick","$event","$options","addToCart","disabled","isOutOfStock","_hoisted_4"],"sources":["D:\\Thứ 4\\food\\src\\components\\MenuWater.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        \r\n      <div class=\"product-list\">\r\n        <div \r\n          v-for=\"item in itemsWater\" \r\n          :key=\"item.id\" \r\n          class=\"product-card\" \r\n        >\r\n          <img :src=\"item.image\" :alt=\"item.title\" />\r\n          <h3>{{ item.title }}</h3>\r\n          <p>{{ item.description }}</p>\r\n          <div class=\"product-price\">{{ item.price.toLocaleString() }} VNĐ</div>\r\n  \r\n          \r\n  \r\n          <!-- Nút thêm vào giỏ, thay đổi nếu hết hàng -->\r\n          <button \r\n            @click=\"addToCart(item)\" \r\n            :disabled=\"isOutOfStock(item)\" \r\n            class=\"add-to-cart-button\"\r\n          >\r\n            {{ isOutOfStock(item) ? 'Hết hàng' : 'Thêm vào giỏ' }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  \r\n  import cart from '@/data/cart';\r\n  import items from '@/data/items';\r\nimport itemsWater from '@/data/itemsWater';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        itemsWater: itemsWater.map(item => ({ ...item, selectedQuantity: 1 })), // Khởi tạo số lượng ban đầu là 1\r\n        cart: cart, \r\n      };\r\n    },\r\n    methods: {\r\n      // Kiểm tra số lượng sản phẩm có đủ không\r\n      isOutOfStock(item) {\r\n        return item.selectedQuantity > item.quanlity || item.quanlity <= 0;\r\n      },\r\n  \r\n      increaseSelectedQuantity(item) {\r\n        const prod = items.find(i => i.id == item.id);\r\n        if (prod && item.selectedQuantity < prod.quantity) { // Kiểm tra prod tồn tại và số lượng chưa vượt quá\r\n          item.selectedQuantity++;\r\n          prod.quantity--;\r\n        } else {\r\n          alert(\"Không đủ số lượng sản phẩm trong kho\");\r\n        }\r\n      },\r\n      decreaseSelectedQuantity(item) {\r\n        const prod = items.find(i => i.id == item.id);\r\n        if (prod && item.selectedQuantity > 1) { // Kiểm tra prod tồn tại và số lượng lớn hơn 1\r\n          item.selectedQuantity--;\r\n          prod.quantity++;\r\n        } else if (prod) {\r\n          this.deleteproduct(item);\r\n          prod.quantity++;\r\n        }\r\n      },\r\n      addToCart(product) {\r\n        const cartItem = this.cart.find(item => item.id === product.id);\r\n        if (cartItem && product.quanlity > 0) {\r\n          cartItem.quantity += 1;\r\n          alert(\"Sản phẩm được cập nhật trong giỏ hàng\");\r\n        } else {\r\n          if (product.quanlity > 0) {\r\n            const newproduct = { ...product, quantity: 1 };\r\n            this.cart.push(newproduct);\r\n          }\r\n          alert(\"Sản phẩm được thêm vào giỏ hàng\");\r\n        }\r\n        product.selectedQuantity = 1; // Đặt lại số lượng sau khi thêm vào giỏ hàng\r\n        product.quanlity--;\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  \r\n  <style scoped>\r\n  /* Style cho thực đơn */\r\n  h1 {\r\n    text-align: center;\r\n    margin-top: 30px;\r\n    font-size: 36px;\r\n    color: #333;\r\n  }\r\n  \r\n  /* Danh sách sản phẩm */\r\n  .product-list {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n    gap: 20px;\r\n    padding: 20px;\r\n  }\r\n  \r\n  /* Thẻ sản phẩm */\r\n  .product-card {\r\n    background-color: #fff;\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n    padding: 15px;\r\n    text-align: center;\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .product-card:hover {\r\n    transform: scale(1.05);\r\n    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);\r\n  }\r\n  \r\n  .product-card img {\r\n    width: 100%;\r\n    height: 180px;\r\n    object-fit: cover;\r\n    border-radius: 8px;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .product-card h3 {\r\n    font-size: 20px;\r\n    margin: 10px 0;\r\n    color: #333;\r\n  }\r\n  \r\n  .product-card p {\r\n    font-size: 14px;\r\n    color: #555;\r\n  }\r\n  \r\n  .product-card .product-price {\r\n    font-size: 16px;\r\n    color: #fcb034;\r\n    margin: 10px 0;\r\n  }\r\n  \r\n  /* Nút thêm vào giỏ */\r\n  .product-card button {\r\n    background-color: #fcb034;\r\n    color: white;\r\n    padding: 10px 20px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    font-size: 16px;\r\n  }\r\n  \r\n  .product-card button:hover {\r\n    background-color: #e69526;\r\n  }\r\n  \r\n  /* Điều khiển số lượng */\r\n  .quantity-controls {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 10px;\r\n    margin: 10px 0;\r\n  }\r\n  \r\n  .quantity-controls button {\r\n    padding: 5px 10px;\r\n    background-color: #fcb034;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .quantity-controls button:hover {\r\n    background-color: #e69526;\r\n  }\r\n  \r\n  .quantity-controls span {\r\n    font-size: 16px;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EAGWA,KAAK,EAAC;AAAc;mBAH/B;;EAYeA,KAAK,EAAC;AAAe;mBAZpC;;uBACIC,mBAAA,CAyBM,cAvBJC,mBAAA,CAsBM,OAtBNC,UAsBM,I,kBArBJF,mBAAA,CAoBMG,SAAA,QAxBdC,WAAA,CAKyBC,KAAA,CAAAC,UAAU,EAAlBC,IAAI;yBADbP,mBAAA,CAoBM;MAlBHQ,GAAG,EAAED,IAAI,CAACE,EAAE;MACbV,KAAK,EAAC;QAENE,mBAAA,CAA2C;MAArCS,GAAG,EAAEH,IAAI,CAACI,KAAK;MAAGC,GAAG,EAAEL,IAAI,CAACM;4BAT5CC,UAAA,GAUUb,mBAAA,CAAyB,YAAAc,gBAAA,CAAlBR,IAAI,CAACM,KAAK,kBACjBZ,mBAAA,CAA6B,WAAAc,gBAAA,CAAvBR,IAAI,CAACS,WAAW,kBACtBf,mBAAA,CAAsE,OAAtEgB,UAAsE,EAAAF,gBAAA,CAAxCR,IAAI,CAACW,KAAK,CAACC,cAAc,MAAK,MAAI,iBAIhEC,mBAAA,6CAAgD,EAChDnB,mBAAA,CAMS;MALNoB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,SAAS,CAACjB,IAAI;MACrBkB,QAAQ,EAAEF,QAAA,CAAAG,YAAY,CAACnB,IAAI;MAC5BR,KAAK,EAAC;wBAEHwB,QAAA,CAAAG,YAAY,CAACnB,IAAI,uDAtBhCoB,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}