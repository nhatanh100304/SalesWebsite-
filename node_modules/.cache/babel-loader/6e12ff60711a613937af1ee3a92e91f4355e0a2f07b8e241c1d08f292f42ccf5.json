{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"error\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"Đăng ký tài khoản\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    placeholder: \"Tên đăng nhập\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    type: \"password\",\n    placeholder: \"Mật khẩu\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.confirmPassword = $event),\n    type: \"password\",\n    placeholder: \"Xác nhận mật khẩu\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.confirmPassword]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.register && $options.register(...args))\n  }, \"Đăng ký\"), $data.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_1, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","class","_createElementBlock","_createElementVNode","_cache","$event","$data","username","placeholder","password","type","confirmPassword","onClick","args","$options","register","error","_hoisted_1","_toDisplayString","_createCommentVNode"],"sources":["D:\\Thứ 4\\food\\src\\components\\RegisterPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Đăng ký tài khoản</h2>\r\n    <input v-model=\"username\" placeholder=\"Tên đăng nhập\" />\r\n    <input v-model=\"password\"  type=\"password\" placeholder=\"Mật khẩu\" />\r\n    <input\r\n      v-model=\"confirmPassword\" \r\n      type=\"password\"\r\n      placeholder=\"Xác nhận mật khẩu\"\r\n    />\r\n    <button @click=\"register\">Đăng ký</button>\r\n    <p  v-if=\"error\" class=\"error\">{{error}}</p>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport users from '@/data/users';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      error: \"\",\r\n      success: \"\",\r\n      users: users, // Giữ dữ liệu mẫu cho users hoặc dữ liệu mặc định\r\n    };\r\n  },\r\n  methods: {\r\n    register() {\r\n      // Kiểm tra mật khẩu phải trùng khớp\r\n      if (this.password !== this.confirmPassword) {\r\n        this.error = \"Mật khẩu không trùng khớp\";\r\n        return;\r\n      }\r\n      \r\n      // Lấy danh sách người dùng từ localStorage\r\n      let storedUsers = JSON.parse(localStorage.getItem('users')) || [];\r\n\r\n      // Kiểm tra xem tên đăng nhập đã tồn tại trong localStorage chưa\r\n      const existingUser = storedUsers.find(user => user.username === this.username);\r\n      if (existingUser) {\r\n        this.error = \"Tên đăng nhập đã tồn tại\";\r\n        return;\r\n      }\r\n\r\n      // Tạo người dùng mới và thêm vào danh sách\r\n      const newUser = { id: storedUsers.length + 1, username: this.username, password: this.password };\r\n      storedUsers.push(newUser);\r\n      \r\n      // Lưu danh sách người dùng mới vào localStorage\r\n      localStorage.setItem('users', JSON.stringify(storedUsers));\r\n      \r\n      // Thông báo đăng ký thành công và reset form\r\n      alert(\"Đăng ký thành công\");\r\n      this.username = '';\r\n      this.password = '';\r\n      this.confirmPassword = '';\r\n      this.error = '';\r\n\r\n      // Chuyển hướng sang trang đăng nhập\r\n      this.$router.push('/LoginPage');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style>\r\n</style>"],"mappings":";;EAAAA,GAAA;EAWqBC,KAAK,EAAC;;;uBAVzBC,mBAAA,CAYM,c,0BAXJC,mBAAA,CAA0B,YAAtB,mBAAiB,sB,gBACrBA,mBAAA,CAAwD;IAH5D,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGoBC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAAtBF,KAAA,CAAAC,QAAQ,E,mBACxBJ,mBAAA,CAAoE;IAJxE,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIoBC,KAAA,CAAAG,QAAQ,GAAAJ,MAAA;IAAGK,IAAI,EAAC,UAAU;IAACF,WAAW,EAAC;iDAAvCF,KAAA,CAAAG,QAAQ,E,mBACxBN,mBAAA,CAIE;IATN,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMeC,KAAA,CAAAK,eAAe,GAAAN,MAAA;IACxBK,IAAI,EAAC,UAAU;IACfF,WAAW,EAAC;iDAFHF,KAAA,CAAAK,eAAe,E,GAI1BR,mBAAA,CAA0C;IAAjCS,OAAK,EAAAR,MAAA,QAAAA,MAAA,UAAAS,IAAA,KAAEC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;KAAE,SAAO,GACvBP,KAAA,CAAAU,KAAK,I,cAAfd,mBAAA,CAA4C,KAA5Ce,UAA4C,EAAAC,gBAAA,CAAXZ,KAAA,CAAAU,KAAK,oBAX1CG,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}